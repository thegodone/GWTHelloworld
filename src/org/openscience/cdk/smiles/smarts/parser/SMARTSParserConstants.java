/* Generated By:JJTree&JavaCC: Do not edit this line. SMARTSParserConstants.java */
/* Copyright (C) 2004-2007  The Chemistry Development Kit (CDK) project
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 * (or see http://www.gnu.org/copyleft/lesser.html)
 */
package org.openscience.cdk.smiles.smarts.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SMARTSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WS = 1;
  /** RegularExpression Id. */
  int L_AND = 2;
  /** RegularExpression Id. */
  int H_AND = 3;
  /** RegularExpression Id. */
  int OR = 4;
  /** RegularExpression Id. */
  int NOT = 5;
  /** RegularExpression Id. */
  int S_BOND = 6;
  /** RegularExpression Id. */
  int UP_S_BOND = 7;
  /** RegularExpression Id. */
  int DN_S_BOND = 8;
  /** RegularExpression Id. */
  int UP_OR_UNSPECIFIED_S_BOND = 9;
  /** RegularExpression Id. */
  int DN_OR_UNSPECIFIED_S_BOND = 10;
  /** RegularExpression Id. */
  int D_BOND = 11;
  /** RegularExpression Id. */
  int T_BOND = 12;
  /** RegularExpression Id. */
  int AR_BOND = 13;
  /** RegularExpression Id. */
  int ANY_BOND = 14;
  /** RegularExpression Id. */
  int R_BOND = 15;
  /** RegularExpression Id. */
  int c = 16;
  /** RegularExpression Id. */
  int n = 17;
  /** RegularExpression Id. */
  int o = 18;
  /** RegularExpression Id. */
  int s = 19;
  /** RegularExpression Id. */
  int p = 20;
  /** RegularExpression Id. */
  int as = 21;
  /** RegularExpression Id. */
  int se = 22;
  /** RegularExpression Id. */
  int B = 23;
  /** RegularExpression Id. */
  int C = 24;
  /** RegularExpression Id. */
  int N = 25;
  /** RegularExpression Id. */
  int O = 26;
  /** RegularExpression Id. */
  int F = 27;
  /** RegularExpression Id. */
  int P = 28;
  /** RegularExpression Id. */
  int S = 29;
  /** RegularExpression Id. */
  int CL = 30;
  /** RegularExpression Id. */
  int BR = 31;
  /** RegularExpression Id. */
  int I = 32;
  /** RegularExpression Id. */
  int WILDCARD = 33;
  /** RegularExpression Id. */
  int a = 34;
  /** RegularExpression Id. */
  int A = 35;
  /** RegularExpression Id. */
  int CARET = 36;
  /** RegularExpression Id. */
  int Q_MARK = 37;
  /** RegularExpression Id. */
  int DIGIT = 38;
  /** RegularExpression Id. */
  int L_BRACKET = 39;
  /** RegularExpression Id. */
  int L_PAREN = 40;
  /** RegularExpression Id. */
  int R_PAREN = 41;
  /** RegularExpression Id. */
  int R_BRACKET = 42;
  /** RegularExpression Id. */
  int DOLLAR = 43;
  /** RegularExpression Id. */
  int PLUS = 44;
  /** RegularExpression Id. */
  int h = 45;
  /** RegularExpression Id. */
  int D = 46;
  /** RegularExpression Id. */
  int R = 47;
  /** RegularExpression Id. */
  int r = 48;
  /** RegularExpression Id. */
  int v = 49;
  /** RegularExpression Id. */
  int X = 50;
  /** RegularExpression Id. */
  int x = 51;
  /** RegularExpression Id. */
  int G = 52;
  /** RegularExpression Id. */
  int HX = 53;
  /** RegularExpression Id. */
  int H = 54;
  /** RegularExpression Id. */
  int HE = 55;
  /** RegularExpression Id. */
  int LI = 56;
  /** RegularExpression Id. */
  int BE = 57;
  /** RegularExpression Id. */
  int NE = 58;
  /** RegularExpression Id. */
  int NA = 59;
  /** RegularExpression Id. */
  int MG = 60;
  /** RegularExpression Id. */
  int AL = 61;
  /** RegularExpression Id. */
  int SI = 62;
  /** RegularExpression Id. */
  int AR = 63;
  /** RegularExpression Id. */
  int K = 64;
  /** RegularExpression Id. */
  int CA = 65;
  /** RegularExpression Id. */
  int TI = 66;
  /** RegularExpression Id. */
  int V = 67;
  /** RegularExpression Id. */
  int CR = 68;
  /** RegularExpression Id. */
  int MN = 69;
  /** RegularExpression Id. */
  int FE = 70;
  /** RegularExpression Id. */
  int CO = 71;
  /** RegularExpression Id. */
  int NI = 72;
  /** RegularExpression Id. */
  int CU = 73;
  /** RegularExpression Id. */
  int ZN = 74;
  /** RegularExpression Id. */
  int GA = 75;
  /** RegularExpression Id. */
  int GE = 76;
  /** RegularExpression Id. */
  int AS = 77;
  /** RegularExpression Id. */
  int SE = 78;
  /** RegularExpression Id. */
  int KR = 79;
  /** RegularExpression Id. */
  int RB = 80;
  /** RegularExpression Id. */
  int SR = 81;
  /** RegularExpression Id. */
  int Y = 82;
  /** RegularExpression Id. */
  int ZR = 83;
  /** RegularExpression Id. */
  int NB = 84;
  /** RegularExpression Id. */
  int MO = 85;
  /** RegularExpression Id. */
  int TC = 86;
  /** RegularExpression Id. */
  int RU = 87;
  /** RegularExpression Id. */
  int RH = 88;
  /** RegularExpression Id. */
  int PD = 89;
  /** RegularExpression Id. */
  int AG = 90;
  /** RegularExpression Id. */
  int CD = 91;
  /** RegularExpression Id. */
  int IN = 92;
  /** RegularExpression Id. */
  int SN = 93;
  /** RegularExpression Id. */
  int SB = 94;
  /** RegularExpression Id. */
  int TE = 95;
  /** RegularExpression Id. */
  int XE = 96;
  /** RegularExpression Id. */
  int CS = 97;
  /** RegularExpression Id. */
  int BA = 98;
  /** RegularExpression Id. */
  int LA = 99;
  /** RegularExpression Id. */
  int HF = 100;
  /** RegularExpression Id. */
  int TA = 101;
  /** RegularExpression Id. */
  int W = 102;
  /** RegularExpression Id. */
  int RE = 103;
  /** RegularExpression Id. */
  int OS = 104;
  /** RegularExpression Id. */
  int IR = 105;
  /** RegularExpression Id. */
  int PT = 106;
  /** RegularExpression Id. */
  int AU = 107;
  /** RegularExpression Id. */
  int HG = 108;
  /** RegularExpression Id. */
  int TL = 109;
  /** RegularExpression Id. */
  int PB = 110;
  /** RegularExpression Id. */
  int BI = 111;
  /** RegularExpression Id. */
  int PO = 112;
  /** RegularExpression Id. */
  int AT = 113;
  /** RegularExpression Id. */
  int RN = 114;
  /** RegularExpression Id. */
  int FR = 115;
  /** RegularExpression Id. */
  int RA = 116;
  /** RegularExpression Id. */
  int AC = 117;
  /** RegularExpression Id. */
  int TH = 118;
  /** RegularExpression Id. */
  int PA = 119;
  /** RegularExpression Id. */
  int U = 120;
  /** RegularExpression Id. */
  int PU = 121;
  /** RegularExpression Id. */
  int AM = 122;
  /** RegularExpression Id. */
  int CM = 123;
  /** RegularExpression Id. */
  int BK = 124;
  /** RegularExpression Id. */
  int CF = 125;
  /** RegularExpression Id. */
  int ES = 126;
  /** RegularExpression Id. */
  int FM = 127;
  /** RegularExpression Id. */
  int MD = 128;
  /** RegularExpression Id. */
  int NO = 129;
  /** RegularExpression Id. */
  int LR = 130;
  /** RegularExpression Id. */
  int NP = 131;
  /** RegularExpression Id. */
  int CE = 132;
  /** RegularExpression Id. */
  int ND = 133;
  /** RegularExpression Id. */
  int PM = 134;
  /** RegularExpression Id. */
  int SM = 135;
  /** RegularExpression Id. */
  int EU = 136;
  /** RegularExpression Id. */
  int GD = 137;
  /** RegularExpression Id. */
  int TB = 138;
  /** RegularExpression Id. */
  int DY = 139;
  /** RegularExpression Id. */
  int HO = 140;
  /** RegularExpression Id. */
  int ER = 141;
  /** RegularExpression Id. */
  int TM = 142;
  /** RegularExpression Id. */
  int YB = 143;
  /** RegularExpression Id. */
  int LU = 144;
  /** RegularExpression Id. */
  int PR = 145;
  /** RegularExpression Id. */
  int SC = 146;

  /** Lexical state. */
  int ATOM_EXPRESSION = 0;
  /** Lexical state. */
  int DEFAULT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WS>",
    "\";\"",
    "\"&\"",
    "\",\"",
    "\"!\"",
    "\"-\"",
    "\"/\"",
    "\"\\\\\"",
    "\"/?\"",
    "\"\\\\?\"",
    "\"=\"",
    "\"#\"",
    "\":\"",
    "\"~\"",
    "\"@\"",
    "\"c\"",
    "\"n\"",
    "\"o\"",
    "\"s\"",
    "\"p\"",
    "\"as\"",
    "\"se\"",
    "\"B\"",
    "\"C\"",
    "\"N\"",
    "\"O\"",
    "\"F\"",
    "\"P\"",
    "\"S\"",
    "\"Cl\"",
    "\"Br\"",
    "\"I\"",
    "\"*\"",
    "\"a\"",
    "\"A\"",
    "\"^\"",
    "\"?\"",
    "<DIGIT>",
    "\"[\"",
    "\"(\"",
    "\")\"",
    "\"]\"",
    "\"$\"",
    "\"+\"",
    "\"h\"",
    "\"D\"",
    "\"R\"",
    "\"r\"",
    "\"v\"",
    "\"X\"",
    "\"x\"",
    "\"G\"",
    "\"#X\"",
    "\"H\"",
    "\"He\"",
    "\"Li\"",
    "\"Be\"",
    "\"Ne\"",
    "\"Na\"",
    "\"Mg\"",
    "\"Al\"",
    "\"Si\"",
    "\"Ar\"",
    "\"K\"",
    "\"Ca\"",
    "\"Ti\"",
    "\"V\"",
    "\"Cr\"",
    "\"Mn\"",
    "\"Fe\"",
    "\"Co\"",
    "\"Ni\"",
    "\"Cu\"",
    "\"Zn\"",
    "\"Ga\"",
    "\"Ge\"",
    "\"As\"",
    "\"Se\"",
    "\"Kr\"",
    "\"Rb\"",
    "\"Sr\"",
    "\"Y\"",
    "\"Zr\"",
    "\"Nb\"",
    "\"Mo\"",
    "\"Tc\"",
    "\"Ru\"",
    "\"Rh\"",
    "\"Pd\"",
    "\"Ag\"",
    "\"Cd\"",
    "\"In\"",
    "\"Sn\"",
    "\"Sb\"",
    "\"Te\"",
    "\"Xe\"",
    "\"Cs\"",
    "\"Ba\"",
    "\"La\"",
    "\"Hf\"",
    "\"Ta\"",
    "\"W\"",
    "\"Re\"",
    "\"Os\"",
    "\"Ir\"",
    "\"Pt\"",
    "\"Au\"",
    "\"Hg\"",
    "\"Tl\"",
    "\"Pb\"",
    "\"Bi\"",
    "\"Po\"",
    "\"At\"",
    "\"Rn\"",
    "\"Fr\"",
    "\"Ra\"",
    "\"Ac\"",
    "\"Th\"",
    "\"Pa\"",
    "\"U\"",
    "\"Pu\"",
    "\"Am\"",
    "\"Cm\"",
    "\"Bk\"",
    "\"Cf\"",
    "\"Es\"",
    "\"Fm\"",
    "\"Md\"",
    "\"No\"",
    "\"Lr\"",
    "\"Np\"",
    "\"Ce\"",
    "\"Nd\"",
    "\"Pm\"",
    "\"Sm\"",
    "\"Eu\"",
    "\"Gd\"",
    "\"Tb\"",
    "\"Dy\"",
    "\"Ho\"",
    "\"Er\"",
    "\"Tm\"",
    "\"Yb\"",
    "\"Lu\"",
    "\"Pr\"",
    "\"Sc\"",
    "\">>\"",
    "\">\"",
    "\".\"",
    "\"%\"",
    "\"--\"",
    "\"---\"",
    "\"----\"",
    "\"-----\"",
    "\"------\"",
    "\"-------\"",
    "\"--------\"",
    "\"++\"",
    "\"+++\"",
    "\"++++\"",
    "\"+++++\"",
    "\"++++++\"",
    "\"+++++++\"",
    "\"++++++++\"",
  };

}
